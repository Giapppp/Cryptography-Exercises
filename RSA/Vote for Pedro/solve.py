import gmpy2
from Crypto.Util.number import bytes_to_long, long_to_bytes

n =22266616657574989868109324252160663470925207690694094953312891282341426880506924648525181014287214350136557941201445475540830225059514652125310445352175047408966028497316806142156338927162621004774769949534239479839334209147097793526879762417526445739552772039876568156469224491682030314994880247983332964121759307658270083947005466578077153185206199759569902810832114058818478518470715726064960617482910172035743003538122402440142861494899725720505181663738931151677884218457824676140190841393217857683627886497104915390385283364971133316672332846071665082777884028170668140862010444247560019193505999704028222347577 
e = 3
cipher = 0x564f544520464f5220504544524f 
lc = len(hex(cipher))
step = 1<<(lc*4)

ss = pow(step, -1, n)
assert(step*ss % n == 1)
c1 = cipher*pow(ss,e,n) % n
a, b = gmpy2.iroot(c1, e)
m = (a+1)*step
print("m =", hex(m))
assert(long_to_bytes(pow(m, e, n)).split(b'\00')[-1] == b'VOTE FOR PEDRO')
print('{"option":"vote","vote":"' + hex(m)[2:]+ '"}')
